#!/usr/bin/with-contenv bashio
# ==============================================================================
# Home Assistant Add-on: VSCode with Claude Code AI
# Runs code-server
# ==============================================================================

bashio::log.info "Starting code-server..."

declare -a options
declare config_path
declare packages
declare init_commands

# Read configuration
config_path=$(bashio::config 'config_path')
packages=$(bashio::config 'packages')
init_commands=$(bashio::config 'init_commands')

# Install additional packages if requested
if bashio::var.has_value "${packages}"; then
    for package in ${packages}; do
        if bashio::var.has_value "${package}"; then
            bashio::log.info "Installing package ${package}"
            apk add --no-cache "${package}" \
                || bashio::exit.nok "Failed installing package ${package}"
        fi
    done
fi

# Run initialization commands
if bashio::var.has_value "${init_commands}"; then
    for cmd in ${init_commands}; do
        if bashio::var.has_value "${cmd}"; then
            bashio::log.info "Executing init command: ${cmd}"
            eval "${cmd}" \
                || bashio::log.warning "Init command failed: ${cmd}"
        fi
    done
fi

# Set config path
if bashio::var.has_value "${config_path}"; then
    bashio::log.info "Setting config path to: ${config_path}"
    options+=(--user-data-dir "${config_path}")
else
    options+=(--user-data-dir "/data/vscode")
fi

# Set Claude Code CLI configuration if API key exists
if bashio::fs.file_exists "/data/claude_api_key"; then
    export ANTHROPIC_API_KEY="$(cat /data/claude_api_key)"
    bashio::log.info "Claude Code CLI configured with API key"
fi

# Set Claude Code CLI environment variables for persistence
export CLAUDE_CONFIG_DIR="/data/claude-code"
export CLAUDE_MCP_SERVERS_DIR="/data/claude-code/mcp-servers"

# Alternative API key locations for backward compatibility
if bashio::fs.file_exists "/config/claude_api_key"; then
    export ANTHROPIC_API_KEY="$(cat /config/claude_api_key)"
    bashio::log.info "Claude Code CLI configured with API key from /config"
elif bashio::fs.file_exists "/data/claude-code/api_key"; then
    export ANTHROPIC_API_KEY="$(cat /data/claude-code/api_key)"
    bashio::log.info "Claude Code CLI configured with API key from persistent storage"
fi

# Disable update check
options+=(--disable-update-check)

# Listen on all interfaces
options+=(--bind-addr "0.0.0.0:1337")

# Set auth to none (handled by Home Assistant)
options+=(--auth "none")

# Disable telemetry
options+=(--disable-telemetry)

# Start code-server
bashio::log.info "Starting code-server with Claude Code integration..."
exec code-server "${options[@]}" /config